/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.hrsm.UI;

import com.hrsm.Utils.MsgBox;
import com.hrsm.DAO.nguoiDungDAO;
import com.hrsm.Entity.nguoiDung;
import com.hrsm.Utils.Auth;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;
import java.util.Random;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;

/**
 *
 * @author lenovo
 */
public class LoginJFrame extends javax.swing.JFrame {

    /**
     * Creates new form LoginJFrame1
     *
     * @param parent
     * @param modal
     */
    public LoginJFrame() {
        initComponents();
        init();
    }
    String url = "jdbc:sqlserver://localhost;DatabaseName=HRSM;user=sa; password=songlong";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbPass = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        lbUser = new javax.swing.JLabel();
        txtPass = new javax.swing.JPasswordField();
        btnSignIn = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lbForgotPass = new javax.swing.JLabel();
        lbImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbPass.setFont(new java.awt.Font("Lato", 0, 16)); // NOI18N
        lbPass.setForeground(new java.awt.Color(255, 255, 255));
        lbPass.setText("Username");
        getContentPane().add(lbPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 250, -1, -1));

        txtUser.setBackground(new Color(0,0,0,0));
        txtUser.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        txtUser.setForeground(new java.awt.Color(255, 255, 255));
        txtUser.setToolTipText("");
        txtUser.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtUser.setCaretColor(new java.awt.Color(255, 255, 255));
        txtUser.setOpaque(false);
        getContentPane().add(txtUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 280, 400, 30));

        lbUser.setFont(new java.awt.Font("Lato", 0, 16)); // NOI18N
        lbUser.setForeground(new java.awt.Color(255, 255, 255));
        lbUser.setText("Password");
        getContentPane().add(lbUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 350, -1, -1));

        txtPass.setBackground(new Color(0,0,0,0));
        txtPass.setFont(new java.awt.Font("Lato", 0, 16)); // NOI18N
        txtPass.setForeground(new java.awt.Color(255, 255, 255));
        txtPass.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtPass.setNextFocusableComponent(btnSignIn);
        txtPass.setOpaque(false);
        txtPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPassKeyPressed(evt);
            }
        });
        getContentPane().add(txtPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 380, 400, 30));

        btnSignIn.setBackground(new Color(0,0,0,0   ));
        btnSignIn.setFont(new java.awt.Font("Lato", 1, 16)); // NOI18N
        btnSignIn.setForeground(new java.awt.Color(255, 255, 255));
        btnSignIn.setText("Sign In");
        btnSignIn.setBorder(null);
        btnSignIn.setOpaque(false);
        btnSignIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignInActionPerformed(evt);
            }
        });
        btnSignIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSignInKeyPressed(evt);
            }
        });
        getContentPane().add(btnSignIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 480, 140, 40));

        btnCancel.setBackground(new Color(0,0,0,0   ));
        btnCancel.setFont(new java.awt.Font("Lato", 1, 16)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancel");
        btnCancel.setBorder(null);
        btnCancel.setOpaque(false);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        btnCancel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCancelKeyPressed(evt);
            }
        });
        getContentPane().add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 480, 140, 40));

        lbForgotPass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbForgotPass.setForeground(new java.awt.Color(255, 255, 255));
        lbForgotPass.setText("Forgot password ?");
        lbForgotPass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbForgotPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbForgotPassMouseClicked(evt);
            }
        });
        getContentPane().add(lbForgotPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 440, -1, -1));

        lbImage.setBackground(new Color(0,0,0));
        lbImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Login.png"))); // NOI18N
        getContentPane().add(lbImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1210, 610));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSignInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignInActionPerformed
        this.Login();
    }//GEN-LAST:event_btnSignInActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.Quit();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSignInKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSignInKeyPressed
        this.Login();
    }//GEN-LAST:event_btnSignInKeyPressed

    private void btnCancelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCancelKeyPressed
        this.Quit();
    }//GEN-LAST:event_btnCancelKeyPressed

    private void txtPassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.Login();
        }
    }//GEN-LAST:event_txtPassKeyPressed

    private void lbForgotPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbForgotPassMouseClicked
        getFucnForgot();
    }//GEN-LAST:event_lbForgotPassMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSignIn;
    private javax.swing.JLabel lbForgotPass;
    private javax.swing.JLabel lbImage;
    private javax.swing.JLabel lbPass;
    private javax.swing.JLabel lbUser;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
    nguoiDungDAO userDAO = new nguoiDungDAO();

    private void init() {
        setLocationRelativeTo(null);
        new HRSMJFrame(this, true).setVisible(true);
    }

    public void Login() {
        String USER = txtUser.getText();
        String PASS = new String(txtPass.getPassword());
        nguoiDung user = userDAO.selectById(USER);
        if (user == null) {
            MsgBox.alert(this, "Tài khoản không đúng hoặc không tồn tại. Vui lòng nhập lại !");
        } else if (!PASS.equals(user.getMatKhau())) {
            MsgBox.alert(this, "Mật khẩu không đúng. Vui lòng nhập lại!");
        } else {
            if (user.getVaiTro() == true) {
                Auth.user = user;
                this.dispose();
                new ManagerJFrame().setVisible(true);
            } else {
                Auth.user = user;
                Auth.getName();
                this.dispose();
                new StaffJFrame().setVisible(true);
            }
        }
    }

    public void Quit() {
        if (MsgBox.confirm(this, "bạn có chắc chắn thoát ứng dụng ?")) {
            System.exit(0);
        }
    }

    private void getFucnForgot() {
        String emailRecive = JOptionPane.showInputDialog("Nhập Email của ban và chwof trong giây lát: ");
        if (emailRecive == null) {
            JOptionPane.showMessageDialog(this, "Bạn cần điền Gmail ");
        } else if (emailRecive.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Bạn cần điền Gmail ");
        } else if (!checkmail(emailRecive)) {
            JOptionPane.showMessageDialog(this, "Bạn cần điền đúng định dạng!");
        } else {
            Connection conn = null;
            Statement st = null;
            try {
                conn = DriverManager.getConnection(url);
                st = conn.createStatement();
                String sql = "SELECT ND.username,ND.passwords,ND.vaiTro,Nv.email \n"
                        + "FROM NGUOIDUNG ND \n"
                        + "LEFT JOIN NHANVIEN NV ON ND.username = NV.maNV";
                ResultSet rs = st.executeQuery(sql);
                String email;
                boolean flag = false;
                while (rs.next()) {
                    email = rs.getString("Email");
                    if (emailRecive.equals(email)) {
                        flag = true;
                        sendEmail(emailRecive);
                    }
                }
                if (!flag) {
                }
            } catch (HeadlessException | SQLException e) {
                e.printStackTrace();
            }
        }
    }

    private void sendEmail(String emaiRevice) throws SQLException {
        try {
            Properties prop = new Properties();
            prop.put("mail.smtp.host", "smtp.gmail.com");
            prop.put("mail.smtp.port", "587");
            prop.put("mail.smtp.auth", "true");
            prop.put("mail.smtp.starttls.enable", "true");

            Session s = Session.getInstance(prop,
                    new javax.mail.Authenticator() {
                @Override
                protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
                    return new javax.mail.PasswordAuthentication("kengay0809@gmail.com", "yulnmojrroffffbv");
                }
            });

            String subject = "New password";
            Random random = new Random();
            int x = random.nextInt(10000);
            String Content = String.valueOf(x);

            Message msg = new MimeMessage(s);
            msg.setFrom(new InternetAddress("kengay0809@gmail.com"));
            msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(emaiRevice));
            msg.setSubject(subject);
            msg.setText("This is password for you: " + Content);

            Transport.send(msg);

            Connection conn = null;
            PreparedStatement ps = null;
            conn = DriverManager.getConnection(url);
            String sql = "UPDATE nguoidung \n"
                    + "SET passwords = ?\n"
                    + "FROM nguoidung ND\n"
                    + "LEFT JOIN nhanvien NV ON ND.username = NV.maNV\n"
                    + "WHERE NV.email = ?";
            try {
                ps = conn.prepareStatement(sql);
                ps.setString(1, Content);
                ps.setString(2, emaiRevice);
                ps.execute();
            } catch (SQLException e) {
            } finally {
                try {
                    if (conn != null) {
                        conn.close();
                    }
                    if (ps != null) {
                        ps.close();
                    }
                } catch (SQLException e2) {
                }
            }
            JOptionPane.showMessageDialog(null, "Mật khẩu mới đã được gửi qua mail. Vui lòng vào email để kiểm tra!", "Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        } catch (MessagingException ex) {
            MsgBox.alert(this, "Lỗi gửi Email ");
        }
    }

    public boolean checkmail(String t) {
        Pattern email = Pattern.compile("^[a-zA-Z0-9]\\w{2,}@\\w{2,}(.\\w{2,3}){1,2}$");
        Matcher matchermail = email.matcher(t);
        if (!matchermail.find()) {
            return false;
        }
        return true;
    }

}
